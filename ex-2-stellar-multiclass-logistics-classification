{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3047436,"sourceType":"datasetVersion","datasetId":1866141}],"dockerImageVersionId":31153,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"<h1 style= \"text-align:center;\">Stellar Classification Dataset</h1>\n<h2 style= \"text-align:center;\">With Logistic Regression (Classification)</h1>","metadata":{}},{"cell_type":"code","source":"# !pip install feature-engine","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:36.507809Z","iopub.execute_input":"2025-10-24T20:05:36.508082Z","iopub.status.idle":"2025-10-24T20:05:36.511429Z","shell.execute_reply.started":"2025-10-24T20:05:36.508062Z","shell.execute_reply":"2025-10-24T20:05:36.510785Z"}},"outputs":[],"execution_count":190},{"cell_type":"code","source":"# Import important libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.utils import resample\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsRegressor\n\nfrom sklearn.metrics import accuracy_score, confusion_matrix, precision_score, recall_score, f1_score, roc_auc_score\n\nimport warnings\nwarnings.filterwarnings('ignore')","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:36.512674Z","iopub.execute_input":"2025-10-24T20:05:36.512901Z","iopub.status.idle":"2025-10-24T20:05:36.530882Z","shell.execute_reply.started":"2025-10-24T20:05:36.512885Z","shell.execute_reply":"2025-10-24T20:05:36.530019Z"}},"outputs":[],"execution_count":191},{"cell_type":"code","source":"import pandas as pd\n\ndata = pd.read_csv(\"/kaggle/input/stellar-classification-dataset-sdss17/star_classification.csv\")\nprint(data)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:36.532169Z","iopub.execute_input":"2025-10-24T20:05:36.532396Z","iopub.status.idle":"2025-10-24T20:05:36.695811Z","shell.execute_reply.started":"2025-10-24T20:05:36.532379Z","shell.execute_reply":"2025-10-24T20:05:36.694975Z"}},"outputs":[{"name":"stdout","text":"             obj_ID       alpha      delta         u         g         r  \\\n0      1.237661e+18  135.689107  32.494632  23.87882  22.27530  20.39501   \n1      1.237665e+18  144.826101  31.274185  24.77759  22.83188  22.58444   \n2      1.237661e+18  142.188790  35.582444  25.26307  22.66389  20.60976   \n3      1.237663e+18  338.741038  -0.402828  22.13682  23.77656  21.61162   \n4      1.237680e+18  345.282593  21.183866  19.43718  17.58028  16.49747   \n...             ...         ...        ...       ...       ...       ...   \n99995  1.237679e+18   39.620709  -2.594074  22.16759  22.97586  21.90404   \n99996  1.237679e+18   29.493819  19.798874  22.69118  22.38628  20.45003   \n99997  1.237668e+18  224.587407  15.700707  21.16916  19.26997  18.20428   \n99998  1.237661e+18  212.268621  46.660365  25.35039  21.63757  19.91386   \n99999  1.237661e+18  196.896053  49.464643  22.62171  21.79745  20.60115   \n\n              i         z  run_ID  rerun_ID  cam_col  field_ID   spec_obj_ID  \\\n0      19.16573  18.79371    3606       301        2        79  6.543777e+18   \n1      21.16812  21.61427    4518       301        5       119  1.176014e+19   \n2      19.34857  18.94827    3606       301        2       120  5.152200e+18   \n3      20.50454  19.25010    4192       301        3       214  1.030107e+19   \n4      15.97711  15.54461    8102       301        3       137  6.891865e+18   \n...         ...       ...     ...       ...      ...       ...           ...   \n99995  21.30548  20.73569    7778       301        2       581  1.055431e+19   \n99996  19.75759  19.41526    7917       301        1       289  8.586351e+18   \n99997  17.69034  17.35221    5314       301        4       308  3.112008e+18   \n99998  19.07254  18.62482    3650       301        4       131  7.601080e+18   \n99999  20.00959  19.28075    3650       301        4        60  8.343152e+18   \n\n        class  redshift  plate    MJD  fiber_ID  \n0      GALAXY  0.634794   5812  56354       171  \n1      GALAXY  0.779136  10445  58158       427  \n2      GALAXY  0.644195   4576  55592       299  \n3      GALAXY  0.932346   9149  58039       775  \n4      GALAXY  0.116123   6121  56187       842  \n...       ...       ...    ...    ...       ...  \n99995  GALAXY  0.000000   9374  57749       438  \n99996  GALAXY  0.404895   7626  56934       866  \n99997  GALAXY  0.143366   2764  54535        74  \n99998  GALAXY  0.455040   6751  56368       470  \n99999  GALAXY  0.542944   7410  57104       851  \n\n[100000 rows x 18 columns]\n","output_type":"stream"}],"execution_count":192},{"cell_type":"code","source":"data.info() # Info on dataset","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:36.697269Z","iopub.execute_input":"2025-10-24T20:05:36.697520Z","iopub.status.idle":"2025-10-24T20:05:36.712854Z","shell.execute_reply.started":"2025-10-24T20:05:36.697506Z","shell.execute_reply":"2025-10-24T20:05:36.711780Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 100000 entries, 0 to 99999\nData columns (total 18 columns):\n #   Column       Non-Null Count   Dtype  \n---  ------       --------------   -----  \n 0   obj_ID       100000 non-null  float64\n 1   alpha        100000 non-null  float64\n 2   delta        100000 non-null  float64\n 3   u            100000 non-null  float64\n 4   g            100000 non-null  float64\n 5   r            100000 non-null  float64\n 6   i            100000 non-null  float64\n 7   z            100000 non-null  float64\n 8   run_ID       100000 non-null  int64  \n 9   rerun_ID     100000 non-null  int64  \n 10  cam_col      100000 non-null  int64  \n 11  field_ID     100000 non-null  int64  \n 12  spec_obj_ID  100000 non-null  float64\n 13  class        100000 non-null  object \n 14  redshift     100000 non-null  float64\n 15  plate        100000 non-null  int64  \n 16  MJD          100000 non-null  int64  \n 17  fiber_ID     100000 non-null  int64  \ndtypes: float64(10), int64(7), object(1)\nmemory usage: 13.7+ MB\n","output_type":"stream"}],"execution_count":193},{"cell_type":"code","source":"data.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:36.713530Z","iopub.execute_input":"2025-10-24T20:05:36.713730Z","iopub.status.idle":"2025-10-24T20:05:36.794553Z","shell.execute_reply.started":"2025-10-24T20:05:36.713714Z","shell.execute_reply":"2025-10-24T20:05:36.793176Z"}},"outputs":[{"execution_count":194,"output_type":"execute_result","data":{"text/plain":"             obj_ID          alpha          delta              u  \\\ncount  1.000000e+05  100000.000000  100000.000000  100000.000000   \nmean   1.237665e+18     177.629117      24.135305      21.980468   \nstd    8.438560e+12      96.502241      19.644665      31.769291   \nmin    1.237646e+18       0.005528     -18.785328   -9999.000000   \n25%    1.237659e+18     127.518222       5.146771      20.352353   \n50%    1.237663e+18     180.900700      23.645922      22.179135   \n75%    1.237668e+18     233.895005      39.901550      23.687440   \nmax    1.237681e+18     359.999810      83.000519      32.781390   \n\n                   g              r              i              z  \\\ncount  100000.000000  100000.000000  100000.000000  100000.000000   \nmean       20.531387      19.645762      19.084854      18.668810   \nstd        31.750292       1.854760       1.757895      31.728152   \nmin     -9999.000000       9.822070       9.469903   -9999.000000   \n25%        18.965230      18.135828      17.732285      17.460677   \n50%        21.099835      20.125290      19.405145      19.004595   \n75%        22.123767      21.044785      20.396495      19.921120   \nmax        31.602240      29.571860      32.141470      29.383740   \n\n              run_ID  rerun_ID        cam_col       field_ID   spec_obj_ID  \\\ncount  100000.000000  100000.0  100000.000000  100000.000000  1.000000e+05   \nmean     4481.366060     301.0       3.511610     186.130520  5.783882e+18   \nstd      1964.764593       0.0       1.586912     149.011073  3.324016e+18   \nmin       109.000000     301.0       1.000000      11.000000  2.995191e+17   \n25%      3187.000000     301.0       2.000000      82.000000  2.844138e+18   \n50%      4188.000000     301.0       4.000000     146.000000  5.614883e+18   \n75%      5326.000000     301.0       5.000000     241.000000  8.332144e+18   \nmax      8162.000000     301.0       6.000000     989.000000  1.412694e+19   \n\n            redshift          plate            MJD       fiber_ID  \ncount  100000.000000  100000.000000  100000.000000  100000.000000  \nmean        0.576661    5137.009660   55588.647500     449.312740  \nstd         0.730707    2952.303351    1808.484233     272.498404  \nmin        -0.009971     266.000000   51608.000000       1.000000  \n25%         0.054517    2526.000000   54234.000000     221.000000  \n50%         0.424173    4987.000000   55868.500000     433.000000  \n75%         0.704154    7400.250000   56777.000000     645.000000  \nmax         7.011245   12547.000000   58932.000000    1000.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>obj_ID</th>\n      <th>alpha</th>\n      <th>delta</th>\n      <th>u</th>\n      <th>g</th>\n      <th>r</th>\n      <th>i</th>\n      <th>z</th>\n      <th>run_ID</th>\n      <th>rerun_ID</th>\n      <th>cam_col</th>\n      <th>field_ID</th>\n      <th>spec_obj_ID</th>\n      <th>redshift</th>\n      <th>plate</th>\n      <th>MJD</th>\n      <th>fiber_ID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1.000000e+05</td>\n      <td>100000.000000</td>\n      <td>100000.000000</td>\n      <td>100000.000000</td>\n      <td>100000.000000</td>\n      <td>100000.000000</td>\n      <td>100000.000000</td>\n      <td>100000.000000</td>\n      <td>100000.000000</td>\n      <td>100000.0</td>\n      <td>100000.000000</td>\n      <td>100000.000000</td>\n      <td>1.000000e+05</td>\n      <td>100000.000000</td>\n      <td>100000.000000</td>\n      <td>100000.000000</td>\n      <td>100000.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1.237665e+18</td>\n      <td>177.629117</td>\n      <td>24.135305</td>\n      <td>21.980468</td>\n      <td>20.531387</td>\n      <td>19.645762</td>\n      <td>19.084854</td>\n      <td>18.668810</td>\n      <td>4481.366060</td>\n      <td>301.0</td>\n      <td>3.511610</td>\n      <td>186.130520</td>\n      <td>5.783882e+18</td>\n      <td>0.576661</td>\n      <td>5137.009660</td>\n      <td>55588.647500</td>\n      <td>449.312740</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>8.438560e+12</td>\n      <td>96.502241</td>\n      <td>19.644665</td>\n      <td>31.769291</td>\n      <td>31.750292</td>\n      <td>1.854760</td>\n      <td>1.757895</td>\n      <td>31.728152</td>\n      <td>1964.764593</td>\n      <td>0.0</td>\n      <td>1.586912</td>\n      <td>149.011073</td>\n      <td>3.324016e+18</td>\n      <td>0.730707</td>\n      <td>2952.303351</td>\n      <td>1808.484233</td>\n      <td>272.498404</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.237646e+18</td>\n      <td>0.005528</td>\n      <td>-18.785328</td>\n      <td>-9999.000000</td>\n      <td>-9999.000000</td>\n      <td>9.822070</td>\n      <td>9.469903</td>\n      <td>-9999.000000</td>\n      <td>109.000000</td>\n      <td>301.0</td>\n      <td>1.000000</td>\n      <td>11.000000</td>\n      <td>2.995191e+17</td>\n      <td>-0.009971</td>\n      <td>266.000000</td>\n      <td>51608.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.237659e+18</td>\n      <td>127.518222</td>\n      <td>5.146771</td>\n      <td>20.352353</td>\n      <td>18.965230</td>\n      <td>18.135828</td>\n      <td>17.732285</td>\n      <td>17.460677</td>\n      <td>3187.000000</td>\n      <td>301.0</td>\n      <td>2.000000</td>\n      <td>82.000000</td>\n      <td>2.844138e+18</td>\n      <td>0.054517</td>\n      <td>2526.000000</td>\n      <td>54234.000000</td>\n      <td>221.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1.237663e+18</td>\n      <td>180.900700</td>\n      <td>23.645922</td>\n      <td>22.179135</td>\n      <td>21.099835</td>\n      <td>20.125290</td>\n      <td>19.405145</td>\n      <td>19.004595</td>\n      <td>4188.000000</td>\n      <td>301.0</td>\n      <td>4.000000</td>\n      <td>146.000000</td>\n      <td>5.614883e+18</td>\n      <td>0.424173</td>\n      <td>4987.000000</td>\n      <td>55868.500000</td>\n      <td>433.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1.237668e+18</td>\n      <td>233.895005</td>\n      <td>39.901550</td>\n      <td>23.687440</td>\n      <td>22.123767</td>\n      <td>21.044785</td>\n      <td>20.396495</td>\n      <td>19.921120</td>\n      <td>5326.000000</td>\n      <td>301.0</td>\n      <td>5.000000</td>\n      <td>241.000000</td>\n      <td>8.332144e+18</td>\n      <td>0.704154</td>\n      <td>7400.250000</td>\n      <td>56777.000000</td>\n      <td>645.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.237681e+18</td>\n      <td>359.999810</td>\n      <td>83.000519</td>\n      <td>32.781390</td>\n      <td>31.602240</td>\n      <td>29.571860</td>\n      <td>32.141470</td>\n      <td>29.383740</td>\n      <td>8162.000000</td>\n      <td>301.0</td>\n      <td>6.000000</td>\n      <td>989.000000</td>\n      <td>1.412694e+19</td>\n      <td>7.011245</td>\n      <td>12547.000000</td>\n      <td>58932.000000</td>\n      <td>1000.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":194},{"cell_type":"code","source":"data.head(15)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:36.795817Z","iopub.execute_input":"2025-10-24T20:05:36.796288Z","iopub.status.idle":"2025-10-24T20:05:36.814138Z","shell.execute_reply.started":"2025-10-24T20:05:36.796269Z","shell.execute_reply":"2025-10-24T20:05:36.813165Z"}},"outputs":[{"execution_count":195,"output_type":"execute_result","data":{"text/plain":"          obj_ID       alpha      delta         u         g         r  \\\n0   1.237661e+18  135.689107  32.494632  23.87882  22.27530  20.39501   \n1   1.237665e+18  144.826101  31.274185  24.77759  22.83188  22.58444   \n2   1.237661e+18  142.188790  35.582444  25.26307  22.66389  20.60976   \n3   1.237663e+18  338.741038  -0.402828  22.13682  23.77656  21.61162   \n4   1.237680e+18  345.282593  21.183866  19.43718  17.58028  16.49747   \n5   1.237680e+18  340.995121  20.589476  23.48827  23.33776  21.32195   \n6   1.237679e+18   23.234926  11.418188  21.46973  21.17624  20.92829   \n7   1.237679e+18    5.433176  12.065186  22.24979  22.02172  20.34126   \n8   1.237661e+18  200.290475  47.199402  24.40286  22.35669  20.61032   \n9   1.237671e+18   39.149691  28.102842  21.74669  20.03493  19.17553   \n10  1.237680e+18  328.092076  18.220310  25.77163  22.52042  20.63884   \n11  1.237662e+18  243.986637  25.738280  23.76761  23.79969  20.98318   \n12  1.237681e+18  345.801874  32.672868  23.17274  20.14496  19.41948   \n13  1.237679e+18  331.502030  10.035802  20.82940  18.75091  17.51118   \n14  1.237663e+18  344.984770  -0.352616  23.20911  22.79291  22.08589   \n\n           i         z  run_ID  rerun_ID  cam_col  field_ID   spec_obj_ID  \\\n0   19.16573  18.79371    3606       301        2        79  6.543777e+18   \n1   21.16812  21.61427    4518       301        5       119  1.176014e+19   \n2   19.34857  18.94827    3606       301        2       120  5.152200e+18   \n3   20.50454  19.25010    4192       301        3       214  1.030107e+19   \n4   15.97711  15.54461    8102       301        3       137  6.891865e+18   \n5   20.25615  19.54544    8102       301        3       110  5.658977e+18   \n6   20.60826  20.42573    7773       301        2       462  1.246262e+19   \n7   19.48794  18.84999    7773       301        2       346  6.961443e+18   \n8   19.46490  18.95852    3716       301        5       108  7.459285e+18   \n9   18.81823  18.65422    5934       301        4       122  2.751763e+18   \n10  19.78071  19.05765    8102       301        3        27  5.652162e+18   \n11  19.80745  19.45579    3927       301        4       112  5.322364e+18   \n12  19.22034  18.89359    8157       301        2        38  7.323011e+18   \n13  17.01631  16.62772    7773       301        2       123  5.702738e+18   \n14  21.86282  21.85120    4192       301        3       255  1.037539e+19   \n\n     class  redshift  plate    MJD  fiber_ID  \n0   GALAXY  0.634794   5812  56354       171  \n1   GALAXY  0.779136  10445  58158       427  \n2   GALAXY  0.644195   4576  55592       299  \n3   GALAXY  0.932346   9149  58039       775  \n4   GALAXY  0.116123   6121  56187       842  \n5      QSO  1.424659   5026  55855       741  \n6      QSO  0.586455  11069  58456       113  \n7   GALAXY  0.477009   6183  56210        15  \n8   GALAXY  0.660012   6625  56386       719  \n9     STAR -0.000008   2444  54082       232  \n10  GALAXY  0.459596   5020  55852       525  \n11  GALAXY  0.591409   4727  55693       855  \n12    STAR  0.000072   6504  56540       574  \n13  GALAXY  0.152194   5065  55739       200  \n14  GALAXY  0.818160   9215  57682       796  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>obj_ID</th>\n      <th>alpha</th>\n      <th>delta</th>\n      <th>u</th>\n      <th>g</th>\n      <th>r</th>\n      <th>i</th>\n      <th>z</th>\n      <th>run_ID</th>\n      <th>rerun_ID</th>\n      <th>cam_col</th>\n      <th>field_ID</th>\n      <th>spec_obj_ID</th>\n      <th>class</th>\n      <th>redshift</th>\n      <th>plate</th>\n      <th>MJD</th>\n      <th>fiber_ID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.237661e+18</td>\n      <td>135.689107</td>\n      <td>32.494632</td>\n      <td>23.87882</td>\n      <td>22.27530</td>\n      <td>20.39501</td>\n      <td>19.16573</td>\n      <td>18.79371</td>\n      <td>3606</td>\n      <td>301</td>\n      <td>2</td>\n      <td>79</td>\n      <td>6.543777e+18</td>\n      <td>GALAXY</td>\n      <td>0.634794</td>\n      <td>5812</td>\n      <td>56354</td>\n      <td>171</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1.237665e+18</td>\n      <td>144.826101</td>\n      <td>31.274185</td>\n      <td>24.77759</td>\n      <td>22.83188</td>\n      <td>22.58444</td>\n      <td>21.16812</td>\n      <td>21.61427</td>\n      <td>4518</td>\n      <td>301</td>\n      <td>5</td>\n      <td>119</td>\n      <td>1.176014e+19</td>\n      <td>GALAXY</td>\n      <td>0.779136</td>\n      <td>10445</td>\n      <td>58158</td>\n      <td>427</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1.237661e+18</td>\n      <td>142.188790</td>\n      <td>35.582444</td>\n      <td>25.26307</td>\n      <td>22.66389</td>\n      <td>20.60976</td>\n      <td>19.34857</td>\n      <td>18.94827</td>\n      <td>3606</td>\n      <td>301</td>\n      <td>2</td>\n      <td>120</td>\n      <td>5.152200e+18</td>\n      <td>GALAXY</td>\n      <td>0.644195</td>\n      <td>4576</td>\n      <td>55592</td>\n      <td>299</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1.237663e+18</td>\n      <td>338.741038</td>\n      <td>-0.402828</td>\n      <td>22.13682</td>\n      <td>23.77656</td>\n      <td>21.61162</td>\n      <td>20.50454</td>\n      <td>19.25010</td>\n      <td>4192</td>\n      <td>301</td>\n      <td>3</td>\n      <td>214</td>\n      <td>1.030107e+19</td>\n      <td>GALAXY</td>\n      <td>0.932346</td>\n      <td>9149</td>\n      <td>58039</td>\n      <td>775</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1.237680e+18</td>\n      <td>345.282593</td>\n      <td>21.183866</td>\n      <td>19.43718</td>\n      <td>17.58028</td>\n      <td>16.49747</td>\n      <td>15.97711</td>\n      <td>15.54461</td>\n      <td>8102</td>\n      <td>301</td>\n      <td>3</td>\n      <td>137</td>\n      <td>6.891865e+18</td>\n      <td>GALAXY</td>\n      <td>0.116123</td>\n      <td>6121</td>\n      <td>56187</td>\n      <td>842</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1.237680e+18</td>\n      <td>340.995121</td>\n      <td>20.589476</td>\n      <td>23.48827</td>\n      <td>23.33776</td>\n      <td>21.32195</td>\n      <td>20.25615</td>\n      <td>19.54544</td>\n      <td>8102</td>\n      <td>301</td>\n      <td>3</td>\n      <td>110</td>\n      <td>5.658977e+18</td>\n      <td>QSO</td>\n      <td>1.424659</td>\n      <td>5026</td>\n      <td>55855</td>\n      <td>741</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1.237679e+18</td>\n      <td>23.234926</td>\n      <td>11.418188</td>\n      <td>21.46973</td>\n      <td>21.17624</td>\n      <td>20.92829</td>\n      <td>20.60826</td>\n      <td>20.42573</td>\n      <td>7773</td>\n      <td>301</td>\n      <td>2</td>\n      <td>462</td>\n      <td>1.246262e+19</td>\n      <td>QSO</td>\n      <td>0.586455</td>\n      <td>11069</td>\n      <td>58456</td>\n      <td>113</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1.237679e+18</td>\n      <td>5.433176</td>\n      <td>12.065186</td>\n      <td>22.24979</td>\n      <td>22.02172</td>\n      <td>20.34126</td>\n      <td>19.48794</td>\n      <td>18.84999</td>\n      <td>7773</td>\n      <td>301</td>\n      <td>2</td>\n      <td>346</td>\n      <td>6.961443e+18</td>\n      <td>GALAXY</td>\n      <td>0.477009</td>\n      <td>6183</td>\n      <td>56210</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1.237661e+18</td>\n      <td>200.290475</td>\n      <td>47.199402</td>\n      <td>24.40286</td>\n      <td>22.35669</td>\n      <td>20.61032</td>\n      <td>19.46490</td>\n      <td>18.95852</td>\n      <td>3716</td>\n      <td>301</td>\n      <td>5</td>\n      <td>108</td>\n      <td>7.459285e+18</td>\n      <td>GALAXY</td>\n      <td>0.660012</td>\n      <td>6625</td>\n      <td>56386</td>\n      <td>719</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1.237671e+18</td>\n      <td>39.149691</td>\n      <td>28.102842</td>\n      <td>21.74669</td>\n      <td>20.03493</td>\n      <td>19.17553</td>\n      <td>18.81823</td>\n      <td>18.65422</td>\n      <td>5934</td>\n      <td>301</td>\n      <td>4</td>\n      <td>122</td>\n      <td>2.751763e+18</td>\n      <td>STAR</td>\n      <td>-0.000008</td>\n      <td>2444</td>\n      <td>54082</td>\n      <td>232</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>1.237680e+18</td>\n      <td>328.092076</td>\n      <td>18.220310</td>\n      <td>25.77163</td>\n      <td>22.52042</td>\n      <td>20.63884</td>\n      <td>19.78071</td>\n      <td>19.05765</td>\n      <td>8102</td>\n      <td>301</td>\n      <td>3</td>\n      <td>27</td>\n      <td>5.652162e+18</td>\n      <td>GALAXY</td>\n      <td>0.459596</td>\n      <td>5020</td>\n      <td>55852</td>\n      <td>525</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>1.237662e+18</td>\n      <td>243.986637</td>\n      <td>25.738280</td>\n      <td>23.76761</td>\n      <td>23.79969</td>\n      <td>20.98318</td>\n      <td>19.80745</td>\n      <td>19.45579</td>\n      <td>3927</td>\n      <td>301</td>\n      <td>4</td>\n      <td>112</td>\n      <td>5.322364e+18</td>\n      <td>GALAXY</td>\n      <td>0.591409</td>\n      <td>4727</td>\n      <td>55693</td>\n      <td>855</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>1.237681e+18</td>\n      <td>345.801874</td>\n      <td>32.672868</td>\n      <td>23.17274</td>\n      <td>20.14496</td>\n      <td>19.41948</td>\n      <td>19.22034</td>\n      <td>18.89359</td>\n      <td>8157</td>\n      <td>301</td>\n      <td>2</td>\n      <td>38</td>\n      <td>7.323011e+18</td>\n      <td>STAR</td>\n      <td>0.000072</td>\n      <td>6504</td>\n      <td>56540</td>\n      <td>574</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>1.237679e+18</td>\n      <td>331.502030</td>\n      <td>10.035802</td>\n      <td>20.82940</td>\n      <td>18.75091</td>\n      <td>17.51118</td>\n      <td>17.01631</td>\n      <td>16.62772</td>\n      <td>7773</td>\n      <td>301</td>\n      <td>2</td>\n      <td>123</td>\n      <td>5.702738e+18</td>\n      <td>GALAXY</td>\n      <td>0.152194</td>\n      <td>5065</td>\n      <td>55739</td>\n      <td>200</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>1.237663e+18</td>\n      <td>344.984770</td>\n      <td>-0.352616</td>\n      <td>23.20911</td>\n      <td>22.79291</td>\n      <td>22.08589</td>\n      <td>21.86282</td>\n      <td>21.85120</td>\n      <td>4192</td>\n      <td>301</td>\n      <td>3</td>\n      <td>255</td>\n      <td>1.037539e+19</td>\n      <td>GALAXY</td>\n      <td>0.818160</td>\n      <td>9215</td>\n      <td>57682</td>\n      <td>796</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":195},{"cell_type":"code","source":"data.tail(15)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:36.814901Z","iopub.execute_input":"2025-10-24T20:05:36.815143Z","iopub.status.idle":"2025-10-24T20:05:36.834989Z","shell.execute_reply.started":"2025-10-24T20:05:36.815123Z","shell.execute_reply":"2025-10-24T20:05:36.834088Z"}},"outputs":[{"execution_count":196,"output_type":"execute_result","data":{"text/plain":"             obj_ID       alpha      delta         u         g         r  \\\n99985  1.237661e+18  205.659054  45.177047  19.40044  17.61444  16.68677   \n99986  1.237654e+18  166.435655   1.868256  18.38335  17.00009  16.28329   \n99987  1.237654e+18  167.608870   1.808640  19.08117  17.60231  16.81363   \n99988  1.237679e+18   20.029463  11.414399  22.30954  23.98841  21.82823   \n99989  1.237679e+18   19.286780  15.951587  22.74555  23.01785  21.04041   \n99990  1.237665e+18  143.414774  26.731108  23.79655  22.41332  20.36012   \n99991  1.237665e+18  146.898055  27.818094  26.22899  21.84820  20.47138   \n99992  1.237668e+18  129.862762  14.574312  25.82234  24.02722  21.43137   \n99993  1.237653e+18    0.740551  -9.184243  23.13172  23.18506  21.52854   \n99994  1.237663e+18  317.246996  -0.682254  20.96526  19.81625  19.34186   \n99995  1.237679e+18   39.620709  -2.594074  22.16759  22.97586  21.90404   \n99996  1.237679e+18   29.493819  19.798874  22.69118  22.38628  20.45003   \n99997  1.237668e+18  224.587407  15.700707  21.16916  19.26997  18.20428   \n99998  1.237661e+18  212.268621  46.660365  25.35039  21.63757  19.91386   \n99999  1.237661e+18  196.896053  49.464643  22.62171  21.79745  20.60115   \n\n              i         z  run_ID  rerun_ID  cam_col  field_ID   spec_obj_ID  \\\n99985  16.32051  16.01467    3699       301        3       118  1.649490e+18   \n99986  15.90932  15.62380    1992       301        2       110  5.719751e+17   \n99987  16.38160  16.07000    1992       301        2       118  5.731254e+17   \n99988  20.49596  19.59701    7787       301        2       333  1.246831e+19   \n99989  19.86370  19.25856    7713       301        1       354  5.786070e+18   \n99990  19.33964  18.74413    4569       301        1       213  6.525784e+18   \n99991  19.60049  18.94726    4569       301        1       234  6.523611e+18   \n99992  20.13085  19.66464    5137       301        3       111  5.066775e+18   \n99993  20.26975  20.11383    1740       301        5        27  8.069569e+18   \n99994  19.14711  19.05790    4187       301        2        64  1.154061e+18   \n99995  21.30548  20.73569    7778       301        2       581  1.055431e+19   \n99996  19.75759  19.41526    7917       301        1       289  8.586351e+18   \n99997  17.69034  17.35221    5314       301        4       308  3.112008e+18   \n99998  19.07254  18.62482    3650       301        4       131  7.601080e+18   \n99999  20.00959  19.28075    3650       301        4        60  8.343152e+18   \n\n        class  redshift  plate    MJD  fiber_ID  \n99985  GALAXY  0.145471   1465  53082       169  \n99986  GALAXY  0.095227    508  52366        65  \n99987  GALAXY  0.103702    509  52374       154  \n99988  GALAXY  0.612791  11074  58488       339  \n99989  GALAXY  0.602187   5139  55866       257  \n99990  GALAXY  0.555789   5796  56274       247  \n99991  GALAXY  0.550025   5794  56282       535  \n99992  GALAXY  0.587944   4500  55543       819  \n99993  GALAXY  0.617036   7167  56604       889  \n99994  GALAXY  0.175206   1025  53239        51  \n99995  GALAXY  0.000000   9374  57749       438  \n99996  GALAXY  0.404895   7626  56934       866  \n99997  GALAXY  0.143366   2764  54535        74  \n99998  GALAXY  0.455040   6751  56368       470  \n99999  GALAXY  0.542944   7410  57104       851  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>obj_ID</th>\n      <th>alpha</th>\n      <th>delta</th>\n      <th>u</th>\n      <th>g</th>\n      <th>r</th>\n      <th>i</th>\n      <th>z</th>\n      <th>run_ID</th>\n      <th>rerun_ID</th>\n      <th>cam_col</th>\n      <th>field_ID</th>\n      <th>spec_obj_ID</th>\n      <th>class</th>\n      <th>redshift</th>\n      <th>plate</th>\n      <th>MJD</th>\n      <th>fiber_ID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>99985</th>\n      <td>1.237661e+18</td>\n      <td>205.659054</td>\n      <td>45.177047</td>\n      <td>19.40044</td>\n      <td>17.61444</td>\n      <td>16.68677</td>\n      <td>16.32051</td>\n      <td>16.01467</td>\n      <td>3699</td>\n      <td>301</td>\n      <td>3</td>\n      <td>118</td>\n      <td>1.649490e+18</td>\n      <td>GALAXY</td>\n      <td>0.145471</td>\n      <td>1465</td>\n      <td>53082</td>\n      <td>169</td>\n    </tr>\n    <tr>\n      <th>99986</th>\n      <td>1.237654e+18</td>\n      <td>166.435655</td>\n      <td>1.868256</td>\n      <td>18.38335</td>\n      <td>17.00009</td>\n      <td>16.28329</td>\n      <td>15.90932</td>\n      <td>15.62380</td>\n      <td>1992</td>\n      <td>301</td>\n      <td>2</td>\n      <td>110</td>\n      <td>5.719751e+17</td>\n      <td>GALAXY</td>\n      <td>0.095227</td>\n      <td>508</td>\n      <td>52366</td>\n      <td>65</td>\n    </tr>\n    <tr>\n      <th>99987</th>\n      <td>1.237654e+18</td>\n      <td>167.608870</td>\n      <td>1.808640</td>\n      <td>19.08117</td>\n      <td>17.60231</td>\n      <td>16.81363</td>\n      <td>16.38160</td>\n      <td>16.07000</td>\n      <td>1992</td>\n      <td>301</td>\n      <td>2</td>\n      <td>118</td>\n      <td>5.731254e+17</td>\n      <td>GALAXY</td>\n      <td>0.103702</td>\n      <td>509</td>\n      <td>52374</td>\n      <td>154</td>\n    </tr>\n    <tr>\n      <th>99988</th>\n      <td>1.237679e+18</td>\n      <td>20.029463</td>\n      <td>11.414399</td>\n      <td>22.30954</td>\n      <td>23.98841</td>\n      <td>21.82823</td>\n      <td>20.49596</td>\n      <td>19.59701</td>\n      <td>7787</td>\n      <td>301</td>\n      <td>2</td>\n      <td>333</td>\n      <td>1.246831e+19</td>\n      <td>GALAXY</td>\n      <td>0.612791</td>\n      <td>11074</td>\n      <td>58488</td>\n      <td>339</td>\n    </tr>\n    <tr>\n      <th>99989</th>\n      <td>1.237679e+18</td>\n      <td>19.286780</td>\n      <td>15.951587</td>\n      <td>22.74555</td>\n      <td>23.01785</td>\n      <td>21.04041</td>\n      <td>19.86370</td>\n      <td>19.25856</td>\n      <td>7713</td>\n      <td>301</td>\n      <td>1</td>\n      <td>354</td>\n      <td>5.786070e+18</td>\n      <td>GALAXY</td>\n      <td>0.602187</td>\n      <td>5139</td>\n      <td>55866</td>\n      <td>257</td>\n    </tr>\n    <tr>\n      <th>99990</th>\n      <td>1.237665e+18</td>\n      <td>143.414774</td>\n      <td>26.731108</td>\n      <td>23.79655</td>\n      <td>22.41332</td>\n      <td>20.36012</td>\n      <td>19.33964</td>\n      <td>18.74413</td>\n      <td>4569</td>\n      <td>301</td>\n      <td>1</td>\n      <td>213</td>\n      <td>6.525784e+18</td>\n      <td>GALAXY</td>\n      <td>0.555789</td>\n      <td>5796</td>\n      <td>56274</td>\n      <td>247</td>\n    </tr>\n    <tr>\n      <th>99991</th>\n      <td>1.237665e+18</td>\n      <td>146.898055</td>\n      <td>27.818094</td>\n      <td>26.22899</td>\n      <td>21.84820</td>\n      <td>20.47138</td>\n      <td>19.60049</td>\n      <td>18.94726</td>\n      <td>4569</td>\n      <td>301</td>\n      <td>1</td>\n      <td>234</td>\n      <td>6.523611e+18</td>\n      <td>GALAXY</td>\n      <td>0.550025</td>\n      <td>5794</td>\n      <td>56282</td>\n      <td>535</td>\n    </tr>\n    <tr>\n      <th>99992</th>\n      <td>1.237668e+18</td>\n      <td>129.862762</td>\n      <td>14.574312</td>\n      <td>25.82234</td>\n      <td>24.02722</td>\n      <td>21.43137</td>\n      <td>20.13085</td>\n      <td>19.66464</td>\n      <td>5137</td>\n      <td>301</td>\n      <td>3</td>\n      <td>111</td>\n      <td>5.066775e+18</td>\n      <td>GALAXY</td>\n      <td>0.587944</td>\n      <td>4500</td>\n      <td>55543</td>\n      <td>819</td>\n    </tr>\n    <tr>\n      <th>99993</th>\n      <td>1.237653e+18</td>\n      <td>0.740551</td>\n      <td>-9.184243</td>\n      <td>23.13172</td>\n      <td>23.18506</td>\n      <td>21.52854</td>\n      <td>20.26975</td>\n      <td>20.11383</td>\n      <td>1740</td>\n      <td>301</td>\n      <td>5</td>\n      <td>27</td>\n      <td>8.069569e+18</td>\n      <td>GALAXY</td>\n      <td>0.617036</td>\n      <td>7167</td>\n      <td>56604</td>\n      <td>889</td>\n    </tr>\n    <tr>\n      <th>99994</th>\n      <td>1.237663e+18</td>\n      <td>317.246996</td>\n      <td>-0.682254</td>\n      <td>20.96526</td>\n      <td>19.81625</td>\n      <td>19.34186</td>\n      <td>19.14711</td>\n      <td>19.05790</td>\n      <td>4187</td>\n      <td>301</td>\n      <td>2</td>\n      <td>64</td>\n      <td>1.154061e+18</td>\n      <td>GALAXY</td>\n      <td>0.175206</td>\n      <td>1025</td>\n      <td>53239</td>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>99995</th>\n      <td>1.237679e+18</td>\n      <td>39.620709</td>\n      <td>-2.594074</td>\n      <td>22.16759</td>\n      <td>22.97586</td>\n      <td>21.90404</td>\n      <td>21.30548</td>\n      <td>20.73569</td>\n      <td>7778</td>\n      <td>301</td>\n      <td>2</td>\n      <td>581</td>\n      <td>1.055431e+19</td>\n      <td>GALAXY</td>\n      <td>0.000000</td>\n      <td>9374</td>\n      <td>57749</td>\n      <td>438</td>\n    </tr>\n    <tr>\n      <th>99996</th>\n      <td>1.237679e+18</td>\n      <td>29.493819</td>\n      <td>19.798874</td>\n      <td>22.69118</td>\n      <td>22.38628</td>\n      <td>20.45003</td>\n      <td>19.75759</td>\n      <td>19.41526</td>\n      <td>7917</td>\n      <td>301</td>\n      <td>1</td>\n      <td>289</td>\n      <td>8.586351e+18</td>\n      <td>GALAXY</td>\n      <td>0.404895</td>\n      <td>7626</td>\n      <td>56934</td>\n      <td>866</td>\n    </tr>\n    <tr>\n      <th>99997</th>\n      <td>1.237668e+18</td>\n      <td>224.587407</td>\n      <td>15.700707</td>\n      <td>21.16916</td>\n      <td>19.26997</td>\n      <td>18.20428</td>\n      <td>17.69034</td>\n      <td>17.35221</td>\n      <td>5314</td>\n      <td>301</td>\n      <td>4</td>\n      <td>308</td>\n      <td>3.112008e+18</td>\n      <td>GALAXY</td>\n      <td>0.143366</td>\n      <td>2764</td>\n      <td>54535</td>\n      <td>74</td>\n    </tr>\n    <tr>\n      <th>99998</th>\n      <td>1.237661e+18</td>\n      <td>212.268621</td>\n      <td>46.660365</td>\n      <td>25.35039</td>\n      <td>21.63757</td>\n      <td>19.91386</td>\n      <td>19.07254</td>\n      <td>18.62482</td>\n      <td>3650</td>\n      <td>301</td>\n      <td>4</td>\n      <td>131</td>\n      <td>7.601080e+18</td>\n      <td>GALAXY</td>\n      <td>0.455040</td>\n      <td>6751</td>\n      <td>56368</td>\n      <td>470</td>\n    </tr>\n    <tr>\n      <th>99999</th>\n      <td>1.237661e+18</td>\n      <td>196.896053</td>\n      <td>49.464643</td>\n      <td>22.62171</td>\n      <td>21.79745</td>\n      <td>20.60115</td>\n      <td>20.00959</td>\n      <td>19.28075</td>\n      <td>3650</td>\n      <td>301</td>\n      <td>4</td>\n      <td>60</td>\n      <td>8.343152e+18</td>\n      <td>GALAXY</td>\n      <td>0.542944</td>\n      <td>7410</td>\n      <td>57104</td>\n      <td>851</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":196},{"cell_type":"markdown","source":"## **Preprocessing Data**","metadata":{}},{"cell_type":"code","source":"# Check for null values\nprint(\"\\nMissing values in dataset:\", data.isnull().sum().sum())\ndata = data.dropna()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:36.835845Z","iopub.execute_input":"2025-10-24T20:05:36.836090Z","iopub.status.idle":"2025-10-24T20:05:36.867344Z","shell.execute_reply.started":"2025-10-24T20:05:36.836069Z","shell.execute_reply":"2025-10-24T20:05:36.866684Z"}},"outputs":[{"name":"stdout","text":"\nMissing values in dataset: 0\n","output_type":"stream"}],"execution_count":197},{"cell_type":"code","source":"data.columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:36.868014Z","iopub.execute_input":"2025-10-24T20:05:36.868196Z","iopub.status.idle":"2025-10-24T20:05:36.873236Z","shell.execute_reply.started":"2025-10-24T20:05:36.868179Z","shell.execute_reply":"2025-10-24T20:05:36.872531Z"}},"outputs":[{"execution_count":198,"output_type":"execute_result","data":{"text/plain":"Index(['obj_ID', 'alpha', 'delta', 'u', 'g', 'r', 'i', 'z', 'run_ID',\n       'rerun_ID', 'cam_col', 'field_ID', 'spec_obj_ID', 'class', 'redshift',\n       'plate', 'MJD', 'fiber_ID'],\n      dtype='object')"},"metadata":{}}],"execution_count":198},{"cell_type":"code","source":"# Dropping unneccessary values\ndata = data.drop(['obj_ID','alpha','delta','run_ID','rerun_ID','cam_col','field_ID', 'spec_obj_ID', 'fiber_ID'], axis = 1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:36.875143Z","iopub.execute_input":"2025-10-24T20:05:36.875369Z","iopub.status.idle":"2025-10-24T20:05:36.893687Z","shell.execute_reply.started":"2025-10-24T20:05:36.875351Z","shell.execute_reply":"2025-10-24T20:05:36.892695Z"}},"outputs":[],"execution_count":199},{"cell_type":"code","source":"# Balancing Imbalanced Data\n# Downsampling\nfrom sklearn.utils import resample\n\nprint(\"Data values before balancing:\")\nprint(data[\"class\"].value_counts())\n\ngalaxies_instances = data[data[\"class\"] == \"GALAXY\"]\nstars_instances  = data[data[\"class\"] == \"STAR\"]\n\n# Insert majority class as downsample subject and second biggest class as sample size\ndownsample_instance = resample(galaxies_instances, replace = True, n_samples = len(stars_instances),\n                            random_state = 42)\n\n# Check downsampled shape\nprint(f\"\\nShape of downsample: {downsample_instance.shape}\")","metadata":{"trusted":true,"jupyter":{"source_hidden":true},"execution":{"iopub.status.busy":"2025-10-24T20:05:36.894795Z","iopub.execute_input":"2025-10-24T20:05:36.895092Z","iopub.status.idle":"2025-10-24T20:05:36.934656Z","shell.execute_reply.started":"2025-10-24T20:05:36.895070Z","shell.execute_reply":"2025-10-24T20:05:36.933819Z"}},"outputs":[{"name":"stdout","text":"Data values before balancing:\nclass\nGALAXY    59445\nSTAR      21594\nQSO       18961\nName: count, dtype: int64\n\nShape of downsample: (21594, 9)\n","output_type":"stream"}],"execution_count":200},{"cell_type":"code","source":"# Upsampling\n# Insert minority class as upsample subject and downsampled dataset for reference\nqso_instances = data[data[\"class\"] == \"QSO\"]\nupsample_instance = resample(qso_instances, replace = True, n_samples = len(downsample_instance),\n                            random_state = 42)\n\n# Check upsampled shape\nprint(f\"Shape of upsampled: {upsample_instance.shape}\\n\")\n\n# Downsized and Upsized Dataset\ndata_resampled = pd.concat([downsample_instance, stars_instances, upsample_instance])\nprint(\"Data values after balancing:\")\nprint(data_resampled[\"class\"].value_counts())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:36.936211Z","iopub.execute_input":"2025-10-24T20:05:36.936934Z","iopub.status.idle":"2025-10-24T20:05:36.958572Z","shell.execute_reply.started":"2025-10-24T20:05:36.936913Z","shell.execute_reply":"2025-10-24T20:05:36.957444Z"}},"outputs":[{"name":"stdout","text":"Shape of upsampled: (21594, 9)\n\nData values after balancing:\nclass\nGALAXY    21594\nSTAR      21594\nQSO       21594\nName: count, dtype: int64\n","output_type":"stream"}],"execution_count":201},{"cell_type":"code","source":"# Encoding values for each classes\nencoder = LabelEncoder()\nprint(data_resampled[\"class\"].value_counts())\n\n# Dataframes are not reshape-able\n# Obtain values from dataframe to make it a 1D array\nclass_values = data_resampled[\"class\"].values\n\n# Label Encoder only uses 1D arrays\nclass_values = encoder.fit_transform(class_values)\nprint(\"\\n========\")\nprint(f\"\\nKEYS: \\nGalaxy = 0 \\nStar = 1 \\nQSO = 2\")\n\n# print(class_values)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:36.959467Z","iopub.execute_input":"2025-10-24T20:05:36.959745Z","iopub.status.idle":"2025-10-24T20:05:36.989789Z","shell.execute_reply.started":"2025-10-24T20:05:36.959719Z","shell.execute_reply":"2025-10-24T20:05:36.988608Z"}},"outputs":[{"name":"stdout","text":"class\nGALAXY    21594\nSTAR      21594\nQSO       21594\nName: count, dtype: int64\n\n========\n\nKEYS: \nGalaxy = 0 \nStar = 1 \nQSO = 2\n","output_type":"stream"}],"execution_count":202},{"cell_type":"markdown","source":"## **Model Implementation**","metadata":{}},{"cell_type":"code","source":"X = data_resampled.drop(['class'], axis = 1) # Features\nY = class_values                             # Outcome","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:36.991359Z","iopub.execute_input":"2025-10-24T20:05:36.991598Z","iopub.status.idle":"2025-10-24T20:05:37.017558Z","shell.execute_reply.started":"2025-10-24T20:05:36.991577Z","shell.execute_reply":"2025-10-24T20:05:37.016567Z"}},"outputs":[],"execution_count":203},{"cell_type":"code","source":"# Split data \nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, train_size = 0.8, random_state = 42)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:37.018407Z","iopub.execute_input":"2025-10-24T20:05:37.018680Z","iopub.status.idle":"2025-10-24T20:05:37.055446Z","shell.execute_reply.started":"2025-10-24T20:05:37.018625Z","shell.execute_reply":"2025-10-24T20:05:37.054114Z"}},"outputs":[],"execution_count":204},{"cell_type":"code","source":"# Logistic Regression Classification\nlog_model = LogisticRegression()\nlog_model.fit(X_train, Y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:37.057157Z","iopub.execute_input":"2025-10-24T20:05:37.057613Z","iopub.status.idle":"2025-10-24T20:05:37.650465Z","shell.execute_reply.started":"2025-10-24T20:05:37.057592Z","shell.execute_reply":"2025-10-24T20:05:37.649527Z"}},"outputs":[{"execution_count":205,"output_type":"execute_result","data":{"text/plain":"LogisticRegression()","text/html":"<style>#sk-container-id-28 {color: black;background-color: white;}#sk-container-id-28 pre{padding: 0;}#sk-container-id-28 div.sk-toggleable {background-color: white;}#sk-container-id-28 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-28 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-28 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-28 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-28 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-28 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-28 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-28 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-28 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-28 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-28 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-28 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-28 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-28 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-28 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-28 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-28 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-28 div.sk-item {position: relative;z-index: 1;}#sk-container-id-28 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-28 div.sk-item::before, #sk-container-id-28 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-28 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-28 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-28 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-28 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-28 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-28 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-28 div.sk-label-container {text-align: center;}#sk-container-id-28 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-28 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-28\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-28\" type=\"checkbox\" checked><label for=\"sk-estimator-id-28\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":205},{"cell_type":"code","source":"# Decision Tree Classification\ndtr_model = DecisionTreeClassifier()\ndtr_model.fit(X_train, Y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:37.652421Z","iopub.execute_input":"2025-10-24T20:05:37.652959Z","iopub.status.idle":"2025-10-24T20:05:38.195794Z","shell.execute_reply.started":"2025-10-24T20:05:37.652939Z","shell.execute_reply":"2025-10-24T20:05:38.194959Z"}},"outputs":[{"execution_count":206,"output_type":"execute_result","data":{"text/plain":"DecisionTreeClassifier()","text/html":"<style>#sk-container-id-29 {color: black;background-color: white;}#sk-container-id-29 pre{padding: 0;}#sk-container-id-29 div.sk-toggleable {background-color: white;}#sk-container-id-29 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-29 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-29 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-29 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-29 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-29 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-29 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-29 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-29 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-29 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-29 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-29 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-29 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-29 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-29 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-29 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-29 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-29 div.sk-item {position: relative;z-index: 1;}#sk-container-id-29 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-29 div.sk-item::before, #sk-container-id-29 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-29 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-29 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-29 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-29 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-29 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-29 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-29 div.sk-label-container {text-align: center;}#sk-container-id-29 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-29 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-29\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-29\" type=\"checkbox\" checked><label for=\"sk-estimator-id-29\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":206},{"cell_type":"code","source":"# Random Forest Classification\nrf_model = RandomForestClassifier(n_estimators=10)\nrf_model.fit(X_train, Y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:38.196593Z","iopub.execute_input":"2025-10-24T20:05:38.196862Z","iopub.status.idle":"2025-10-24T20:05:39.199756Z","shell.execute_reply.started":"2025-10-24T20:05:38.196843Z","shell.execute_reply":"2025-10-24T20:05:39.198582Z"}},"outputs":[{"execution_count":207,"output_type":"execute_result","data":{"text/plain":"RandomForestClassifier(n_estimators=10)","text/html":"<style>#sk-container-id-30 {color: black;background-color: white;}#sk-container-id-30 pre{padding: 0;}#sk-container-id-30 div.sk-toggleable {background-color: white;}#sk-container-id-30 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-30 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-30 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-30 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-30 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-30 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-30 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-30 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-30 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-30 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-30 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-30 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-30 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-30 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-30 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-30 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-30 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-30 div.sk-item {position: relative;z-index: 1;}#sk-container-id-30 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-30 div.sk-item::before, #sk-container-id-30 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-30 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-30 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-30 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-30 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-30 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-30 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-30 div.sk-label-container {text-align: center;}#sk-container-id-30 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-30 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-30\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(n_estimators=10)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-30\" type=\"checkbox\" checked><label for=\"sk-estimator-id-30\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(n_estimators=10)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":207},{"cell_type":"code","source":"# SVM Classification\nscalar = StandardScaler().fit(X_train)\nX_train_transformed = scalar.transform(X_train)\nX_test_transformed = scalar.transform(X_test)\n\nsvm_model = SVC(kernel='rbf', gamma=0.5, C=1.0, probability=True)\nsvm_model.fit(X_train_transformed, Y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:05:39.200789Z","iopub.execute_input":"2025-10-24T20:05:39.201075Z","iopub.status.idle":"2025-10-24T20:06:58.073249Z","shell.execute_reply.started":"2025-10-24T20:05:39.201051Z","shell.execute_reply":"2025-10-24T20:06:58.072393Z"}},"outputs":[{"execution_count":208,"output_type":"execute_result","data":{"text/plain":"SVC(gamma=0.5, probability=True)","text/html":"<style>#sk-container-id-31 {color: black;background-color: white;}#sk-container-id-31 pre{padding: 0;}#sk-container-id-31 div.sk-toggleable {background-color: white;}#sk-container-id-31 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-31 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-31 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-31 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-31 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-31 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-31 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-31 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-31 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-31 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-31 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-31 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-31 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-31 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-31 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-31 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-31 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-31 div.sk-item {position: relative;z-index: 1;}#sk-container-id-31 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-31 div.sk-item::before, #sk-container-id-31 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-31 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-31 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-31 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-31 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-31 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-31 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-31 div.sk-label-container {text-align: center;}#sk-container-id-31 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-31 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-31\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(gamma=0.5, probability=True)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-31\" type=\"checkbox\" checked><label for=\"sk-estimator-id-31\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(gamma=0.5, probability=True)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":208},{"cell_type":"code","source":"# k-NN Classification\nknn_model = KNeighborsRegressor(n_neighbors=5)\nknn_model.fit(X_train, Y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:06:58.074110Z","iopub.execute_input":"2025-10-24T20:06:58.074370Z","iopub.status.idle":"2025-10-24T20:06:58.151227Z","shell.execute_reply.started":"2025-10-24T20:06:58.074354Z","shell.execute_reply":"2025-10-24T20:06:58.150370Z"}},"outputs":[{"execution_count":209,"output_type":"execute_result","data":{"text/plain":"KNeighborsRegressor()","text/html":"<style>#sk-container-id-32 {color: black;background-color: white;}#sk-container-id-32 pre{padding: 0;}#sk-container-id-32 div.sk-toggleable {background-color: white;}#sk-container-id-32 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-32 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-32 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-32 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-32 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-32 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-32 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-32 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-32 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-32 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-32 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-32 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-32 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-32 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-32 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-32 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-32 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-32 div.sk-item {position: relative;z-index: 1;}#sk-container-id-32 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-32 div.sk-item::before, #sk-container-id-32 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-32 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-32 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-32 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-32 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-32 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-32 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-32 div.sk-label-container {text-align: center;}#sk-container-id-32 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-32 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-32\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-32\" type=\"checkbox\" checked><label for=\"sk-estimator-id-32\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsRegressor</label><div class=\"sk-toggleable__content\"><pre>KNeighborsRegressor()</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":209},{"cell_type":"markdown","source":"## **Model Predictions**","metadata":{}},{"cell_type":"code","source":"predictions = log_model.predict(X_test)\ndtr_predictions = dtr_model.predict(X_test)\nrf_predictions = rf_model.predict(X_test)\nsvm_predictions = svm_model.predict(X_test)\nknn_predictions = knn_model.predict(X_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:06:58.152035Z","iopub.execute_input":"2025-10-24T20:06:58.152224Z","iopub.status.idle":"2025-10-24T20:07:03.455683Z","shell.execute_reply.started":"2025-10-24T20:06:58.152204Z","shell.execute_reply":"2025-10-24T20:07:03.454626Z"}},"outputs":[],"execution_count":210},{"cell_type":"code","source":"# Get class probability scores\nY_scores = log_model.predict_proba(X_test)\ndtr_Y_scores = dtr_model.predict_proba(X_test)\nrf_Y_scores = rf_model.predict_proba(X_test)\nsvm_Y_scores = svm_model.predict_proba(X_test)\n# knn_Y_scores = knn_model.predict_proba(X_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:03.456877Z","iopub.execute_input":"2025-10-24T20:07:03.457204Z","iopub.status.idle":"2025-10-24T20:07:08.690948Z","shell.execute_reply.started":"2025-10-24T20:07:03.457179Z","shell.execute_reply":"2025-10-24T20:07:08.690136Z"}},"outputs":[],"execution_count":211},{"cell_type":"code","source":"print(\"\\nDecision Tree Metrics\")\nprint(\"===========================\")\ndtr_cm = pd.DataFrame(confusion_matrix(Y_test, dtr_predictions)) \ndtr_precision_scores = precision_score(Y_test, dtr_predictions, average='macro')\n\ndtr_recall_score = recall_score(Y_test, dtr_predictions, average='macro')\ndtr_auc = roc_auc_score(Y_test, dtr_Y_scores, multi_class='ovr')\ndtr_f1_score = f1_score(Y_test, dtr_predictions, average='weighted')\n\nprint(f\"Accuracy score: {((accuracy_score(Y_test, dtr_predictions))*100):.2f}%\")\nprint(f\"\\nPrecision scores: {(dtr_precision_scores*100):.2f}%\")\nprint(f\"\\nRecall scores: {(dtr_recall_score*100):.2f}%\")\nprint(f\"\\nAvg AUC score: {(dtr_auc*100):.2f}%\")\nprint(f\"\\nF1 score: {(dtr_f1_score*100):.2f}%\")\nprint(f\"\\nConfusion Matrix:\\n{dtr_cm}\\n\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:23:14.613115Z","iopub.execute_input":"2025-10-24T20:23:14.613471Z","iopub.status.idle":"2025-10-24T20:23:14.647087Z","shell.execute_reply.started":"2025-10-24T20:23:14.613447Z","shell.execute_reply":"2025-10-24T20:23:14.646096Z"}},"outputs":[{"name":"stdout","text":"\nDecision Tree Metrics\n===========================\nAccuracy score: 97.80%\n\nPrecision scores: 97.81%\n\nRecall scores: 97.79%\n\nAvg AUC score: 98.35%\n\nF1 score: 97.80%\n\nConfusion Matrix:\n      0     1     2\n0  4118   175     4\n1    99  4221     2\n2     5     0  4333\n\n","output_type":"stream"}],"execution_count":217},{"cell_type":"markdown","source":"## **Visualisations**","metadata":{}},{"cell_type":"code","source":"from sklearn.metrics import roc_curve\nfrom sklearn.preprocessing import LabelBinarizer, label_binarize\nfrom sklearn.model_selection import learning_curve, StratifiedKFold, validation_curve\nfrom itertools import cycle","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:08.727417Z","iopub.status.idle":"2025-10-24T20:07:08.727703Z","shell.execute_reply.started":"2025-10-24T20:07:08.727548Z","shell.execute_reply":"2025-10-24T20:07:08.727559Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.metrics import ConfusionMatrixDisplay\n\n# Function for defining Confusion Matrix graph to reuse again!\ndef plot_confusion_matrix(Y_test, predictions, cmap, modelname):\n    \n    cm = confusion_matrix(Y_test, predictions)\n    sns.heatmap(cm, annot = True, cmap = cmap, fmt = 'd')\n    plt.xlabel('Predicted Labels')\n    plt.ylabel('True Labels')\n    plt.title(f'{modelname} Confusion Matrix')\n    plt.show()\n    \nplot_confusion_matrix(Y_test, predictions, \"Blues\", \"Linear Regression\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:08.729153Z","iopub.status.idle":"2025-10-24T20:07:08.729344Z","shell.execute_reply.started":"2025-10-24T20:07:08.729245Z","shell.execute_reply":"2025-10-24T20:07:08.729253Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from yellowbrick.classifier import ROCAUC\nfrom yellowbrick.style import set_palette\n\nclasses = ['GALAXY','STAR','QSO']\n\n# Function for defining mutliclass ROC AUC graph\ndef plot_multiclass_roc(X_train, Y_train, X_test, Y_test, style, modeltype, names):\n    visualizer = ROCAUC(modeltype, classes=names)\n    \n    set_palette(style)\n    visualizer.fit(X_train, Y_train)        \n    visualizer.score(X_test, Y_test)       \n    visualizer.show()     \n    \nplot_multiclass_roc(X_train, Y_train, X_test, Y_test, \"muted\", log_model, classes)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:08.729968Z","iopub.status.idle":"2025-10-24T20:07:08.730218Z","shell.execute_reply.started":"2025-10-24T20:07:08.730086Z","shell.execute_reply":"2025-10-24T20:07:08.730096Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plot_multiclass_roc(X_train, Y_train, X_test, Y_test, \"muted\", svm_model, classes)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:08.731571Z","iopub.status.idle":"2025-10-24T20:07:08.731780Z","shell.execute_reply.started":"2025-10-24T20:07:08.731684Z","shell.execute_reply":"2025-10-24T20:07:08.731694Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plot_multiclass_roc(X_train, Y_train, X_test, Y_test, \"muted\", dtr_model, classes)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:08.733124Z","iopub.status.idle":"2025-10-24T20:07:08.733556Z","shell.execute_reply.started":"2025-10-24T20:07:08.733377Z","shell.execute_reply":"2025-10-24T20:07:08.733396Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plot_multiclass_roc(X_train, Y_train, X_test, Y_test, \"muted\", rf_model, classes)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:08.734253Z","iopub.status.idle":"2025-10-24T20:07:08.734536Z","shell.execute_reply.started":"2025-10-24T20:07:08.734414Z","shell.execute_reply":"2025-10-24T20:07:08.734425Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# \"This estimator is not a classifier; try a regression or clustering score visualizer instead!\" \n# KNN model does not have any graphs","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:08.735563Z","iopub.status.idle":"2025-10-24T20:07:08.735808Z","shell.execute_reply.started":"2025-10-24T20:07:08.735709Z","shell.execute_reply":"2025-10-24T20:07:08.735717Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data.hist(figsize = (16,16));\nplt.title(\"Various Graphs for Features\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:08.736815Z","iopub.status.idle":"2025-10-24T20:07:08.737176Z","shell.execute_reply.started":"2025-10-24T20:07:08.736991Z","shell.execute_reply":"2025-10-24T20:07:08.737006Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data[\"class\"].value_counts().plot(kind = 'bar', color = [\"#D6D84F\", \"#B9E28C\", \"#9EADC8\"])\nplt.title(\"Types of Astral Bodies\", fontsize = 16)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:08.738064Z","iopub.status.idle":"2025-10-24T20:07:08.738337Z","shell.execute_reply.started":"2025-10-24T20:07:08.738185Z","shell.execute_reply":"2025-10-24T20:07:08.738199Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data[\"class\"].value_counts().plot(kind = 'pie', autopct = \"%.1f\", colors = [\"#D6D84F\", \"#B9E28C\", \"#9EADC8\"])\nplt.title(\"Types of Astral Bodies\", fontsize = 16)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:08.739178Z","iopub.status.idle":"2025-10-24T20:07:08.739441Z","shell.execute_reply.started":"2025-10-24T20:07:08.739317Z","shell.execute_reply":"2025-10-24T20:07:08.739328Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data_resampled.groupby(\"class\").size().plot(kind='pie', y = \"class\", label = \"count\",\n                                       autopct='%.1f', colors = [\"#D6D84F\", \"#B9E28C\", \"#9EADC8\"])\nplt.title(\"Classes After Balancing\", fontsize = 16)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:08.742031Z","iopub.status.idle":"2025-10-24T20:07:08.742585Z","shell.execute_reply.started":"2025-10-24T20:07:08.742389Z","shell.execute_reply":"2025-10-24T20:07:08.742407Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## **Evaluations and Conclusion**","metadata":{}},{"cell_type":"code","source":"# Evaluation metrics\nprint(\"\\nLogistic Regression Metrics\")\nprint(\"===========================\")\ncm = pd.DataFrame(confusion_matrix(Y_test, predictions)) \nprecision_scores = precision_score(Y_test, predictions, average=None)\nrecall_score = recall_score(Y_test, predictions, average=None)\nauc = roc_auc_score(Y_test, Y_scores, multi_class='ovr')\nf1_score = f1_score(Y_test, predictions, average='weighted')\n\nprint(f\"Accuracy score: {((accuracy_score(Y_test, predictions))*100):.2f}%\")\nprint(f\"\\nPrecision scores: \\n Galaxy = {(precision_scores[0]*100):.2f}% \\n Star = {(precision_scores[1]*100):.2f}% \\n QSO = {(precision_scores[2]*100):.2f}%\")\nprint(f\"\\nRecall scores: \\n Galaxy = {(recall_score[0]*100):.2f}% \\n Star = {(recall_score[1])*100:.2f}% \\n QSO = {(recall_score[2])*100:.2f}%\")\nprint(f\"\\nAvg AUC score: {(auc*100):.2f}%\")\nprint(f\"\\nF1 score: {(f1_score*100):.2f}%\")\nprint(f\"\\nConfusion Matrix:\\n{cm}\\n\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:08.743308Z","iopub.status.idle":"2025-10-24T20:07:08.743563Z","shell.execute_reply.started":"2025-10-24T20:07:08.743441Z","shell.execute_reply":"2025-10-24T20:07:08.743454Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.metrics import classification_report\n\nprint(classification_report(Y_test, predictions))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-24T20:07:08.744620Z","iopub.status.idle":"2025-10-24T20:07:08.744963Z","shell.execute_reply.started":"2025-10-24T20:07:08.744810Z","shell.execute_reply":"2025-10-24T20:07:08.744824Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"**Dataset Description** The dataset's been taken from Kaggle, made by [fedesoriano](https://www.kaggle.com/datasets/fedesoriano/stellar-classification-dataset-sdss17). It focuses on identifying astral (star) bodies based on a series of recorded observations and proves useful for multiclass identification. There are 100,000 rows detailing the object identifier (object ID), alpha, delta, ultraviolet filter, green filter, near infrared filter, infrared filter, a run ID, rereun ID (processing method for image), camera column (scanline within the run ID), field ID, spectroscopic object IDs, class (which is our Y variables, aka our outcome values consisting of three types - GALAXY, STAR, QUASAR), redshift values, plate ID, Modified Julian Date (MJD) and fiber ID (pointed the light at focal plane for observation). \nIn summary, there are around *seventeen* unique float and integer type features and *three* string categorical classification types.\n\nfedesoriano. (January 2022). Stellar Classification Dataset - SDSS17. Retrieved [Date Retrieved] from https://www.kaggle.com/fedesoriano/stellar-classification-dataset-sdss17.\n\n**","metadata":{}}]}